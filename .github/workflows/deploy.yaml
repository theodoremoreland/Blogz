name: Deploy to Lightsail

permissions:
  id-token: write
  contents: read

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create config.cfg
        run: |
          echo "SQLALCHEMY_DATABASE_URI = '${{ secrets.SQLALCHEMY_DATABASE_URI }}';" > application/instance/config.cfg
          echo "SECRET_KEY = '${{ secrets.SECRET_KEY }}';" >> application/instance/config.cfg

      - name: Build Docker image
        run: docker build -t blogz:latest .

      - name: Upgrade AWS CLI version and setup lightsailctl
        run: |
          aws --version
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update
          which aws
          aws --version
          sudo curl "https://s3.us-west-2.amazonaws.com/lightsailctl/latest/linux-amd64/lightsailctl" -o "/usr/local/bin/lightsailctl"
          sudo chmod +x /usr/local/bin/lightsailctl

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_ROLE_NAME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Push to Lightsail
        run: |
          aws lightsail push-container-image \
            --service-name blogz-container-service \
            --label blogz \
            --image blogz:latest

      - name: Deploy container to Lightsail
        run: |
          aws lightsail create-container-service-deployment \
            --service-name blogz-container-service \
            --containers file://containers.json \
            --public-endpoint file://endpoint.json \
            --region ${{ secrets.AWS_REGION }}